exit
User.find(comment_params[:user_id])
User.find(comment_params[:user_id]
comment_params[:user_id].empty?
comment_params[:user_id]
comment_params
exit
@post.comments
@post
exit
@post.comments
@post.comments.user.uniq!
@post.comments.user_id.uniq!
@post.comments.uniq!
@post.comments.uniq
@post.comments
exit
@post.comments
exit
@post.comments
exit
post_params
exit
post_params
exit
categoryids
exit
post_params[:category_ids]
post_params[:category_ids].delete_if{|i| i==""}
post_params[:category_ids]
post_params
exit
array
array.delete_if{|i| i==""}
array = ["","1"]
["", "1"].delete_if{|i| i ==""}
["", "1"].delete_if?{|i| i ==""}
["", "1"].delete_if{|i| i ==""}
["", "1"].delete_if(|i| i =="")
["", "1"].delete_if(i, i="")
["", "1"].delete_if
["", "1"].delete_if("")
["", "1"].empty?
["", "1"].any?
[""].any?
[""].empty?
[""].empty
post_params[:category_ids].any?
post_params[:category_ids].flat_map
post_params[:category_ids].reject
post_params[:category_ids].
post_params[:category_ids].to_s
post_params[:category_ids].methods
post_params[:category_ids]
post_params[:category_ids].
post_params[:category_ids].contents
post_params[:category_ids].value
post_params[:category_ids].values
post_params[:category_ids].flatten
post_params[:category_ids].empty?
post_params[:category_ids].null?
post_params[:category_ids].null
post_params[:category_ids].size
post_params[:category_ids].empty?
post_params[:category_ids]
post_params[:category_ids].blank?
post_params[:category_ids].empty?
post_params[:category_ids].empy?
post_params[:category_ids].nil?
post_params[:category_ids].any?
post_params[:category_ids]
post_params[:category_ids].empty?
ost_params[:category_ids].empty?
post_params[:categories_attributes][:name].empty?
post_params[:category_ids].empty? && post_params[:categories_attributes][:name].empty?
post_params
exit
post_params
Post
post
post_params
exit
post_params
exit
Category.find(post_params[:category_ids][0])
post_params[:category_ids].empty?
post_params[:category_ids]
post_params
exit
category_ids
categories
post
post_params
exit
post_params
exit
post_params[:category_ids].empty?
post_params[:category_ids]
post_params
exit
n
post_path(@post)
@post
@user
exit
comment
comment.user.username
c
comment.user.username
c
comment.user.username
comment
exit
    end
      comment.user = User.find(comment_params[:user_id])
      comment = Comment.create(content: comment_params[:content], post_id: comment_params[:post_id])
    else
      comment.user = user
      comment = Comment.create(content: comment_params[:content], post_id: comment_params[:post_id])
      user = User.create(comment_params[:user_attributes])
(if comment_params[:user_id].empty?
comment
    redirect_to comment.post
    end
      comment.user = User.find(comment_params[:user_id])
      comment = Comment.create(content: comment_params[:content], post_id: comment_params[:post_id])
    else
      comment.user = user
      comment = Comment.create(content: comment_params[:content], post_id: comment_params[:post_id])
      user = User.create(comment_params[:user_attributes])
if comment_params[:user_id].empty?
comment.post
comment
comment.user.username
comment.user
comment
comment.user = User.find(comment_params[:user_id])
comment = Comment.create(content: comment_params[:content], post_id: comment_params[:post_id])
User.find(comment_params[:user_id])
User.find(comment_params[:user_id]
comment_params[:user_id].empty?
comment_params[:user_id]
comment_params
exit
@post.comments
@post.comment
Comment.all
comment.user
comment.post
comment
exit
exut
comment_params[
comment_params[0]
params
comment_params
comment_params[:user_id].empty?
comment_params[:user_id].empty
comment_params[:user_id]?
comment_params
exit
comment_params
comment
params
exit
User.all
comment
params
exit
c
@user
exit
comment.user
comment
exit
params[:comment][:user]
params[:comment]
params
comment
exit
comment.post
comment
exit
comment.post
comment
